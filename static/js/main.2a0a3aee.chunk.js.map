{"version":3,"sources":["components/card/card.components.jsx","components/card-list/card-list.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","people","id","name","email","CardList","console","log","map","person","App","state","searchField","fetch","then","response","json","users","setState","type","placeholder","onChange","e","target","value","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAW,iBAAhB,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA4BH,EAAMI,OAAOC,GAAzC,yBACjB,6BAAKL,EAAMI,OAAOE,OAClB,4BAAIN,EAAMI,OAAOG,aCHZC,EAAW,SAAAR,GAGpB,OADAS,QAAQC,IAAIV,GACL,qBAAKC,UAAU,YAAf,SAEHD,EAAMI,OAAOO,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAAsBR,OAAQQ,GAAnBA,EAAOP,UCwBbQ,E,kDA3Bb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXV,OAAS,GACTW,YAAa,IALJ,E,gEAUZ,IAAD,OACEC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACjB,OAAOgB,S,+BAG7B,IAAD,OACP,OACE,sBAAKnB,UAAU,MAAf,UACA,uBAAOqB,KAAK,SAASC,YAAY,gBAAgBC,SAAU,SAAAC,GAAC,OAAI,EAAKJ,SAAS,CAAEN,YAAcU,EAAEC,OAAOC,QAAQ,kBAAMlB,QAAQC,IAAI,EAAKI,aACtI,cAAC,EAAD,CAAUV,OAAUwB,KAAKd,MAAMV,gB,GAtBnByB,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2a0a3aee.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\nexport const Card = (props) => (\r\n    <div className ='card-container'>\r\n    <img alt=\"people\" src = {`https://robohash.org/${props.people.id}?set=2%size=180x180`} />\r\n        <h2>{props.people.name}</h2>\r\n        <p>{props.people.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.components'\r\nexport const CardList = props =>\r\n{\r\n    console.log(props);\r\n    return <div className='card-list'>\r\n    {\r\n        props.people.map((person)=>\r\n          <Card key={person.id} people={person} />\r\n         )\r\n    }\r\n  \r\n    </div>\r\n};","\nimport './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.components'\nclass App extends Component\n{\n  constructor(){\n    super();\n\n    this.state = {\n      people : [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount ()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({people:users}));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <input type='search' placeholder='search people' onChange={e => this.setState({ searchField : e.target.value}, () => console.log(this.state))} />\n      <CardList people = {this.state.people} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}